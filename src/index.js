/**
 * Minergate API
 * *MinerGate is a mining pool created by a group of cryptocoin enthusiasts.*  It is the first pool which provides service for merged mining. This means that while mining on our pool you can mine different coins simultaniously without decrease of hashrate for major coin.  **If you are interested in cooperation drop a message to janikakouki@minergate.com.**  | Currency Name | Currency Code (cc) | | --- | --- | | Bitcoin | btc | | Litecoin | ltc | | Bytecoin | bcn | | Monero | xmr | | FantomCoin | fcn | | QuazarCoin | qcn | | DigitalNote | xdn | | MonetaVerde | mcn | | Dashcoin | dsh | | Aeon coin | aeon | | Infinium-8 | inf8 | 
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'api/AffiliatesApi', 'api/MiningApi', 'api/PaymentsApi', 'api/ProfileApi', 'api/PublicApi', 'api/WalletApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./api/AffiliatesApi'), require('./api/MiningApi'), require('./api/PaymentsApi'), require('./api/ProfileApi'), require('./api/PublicApi'), require('./api/WalletApi'));
  }
}(function(ApiClient, AffiliatesApi, MiningApi, PaymentsApi, ProfileApi, PublicApi, WalletApi) {
  'use strict';

  /**
   * MinerGate_is_a_mining_pool_created_by_a_group_ofcryptocoin_enthusiasts_It_is_the_first_pool_whichprovides_service_for_merged_mining__This_means_thatwhile_mining_on_our_pool_you_can_mine_differentcoins_simultaniously_without_decrease_of_hashratefor_major_coin_If_you_are_interested_in_cooperationdrop_a_message_to_janikakoukiminergate_com__Currency_Name__Currency_Code__cc____________Bitcoin__btc__Litecoin__ltc__Bytecoin__bcn__Monero__xmr__FantomCoin__fcn__QuazarCoin__qcn__DigitalNote__xdn__MonetaVerde__mcn__Dashcoin__dsh__Aeon_coin__aeon__Infinium_8__inf8_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var MinergateApi = require('index'); // See note below*.
   * var xxxSvc = new MinergateApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new MinergateApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new MinergateApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new MinergateApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AffiliatesApi service constructor.
     * @property {module:api/AffiliatesApi}
     */
    AffiliatesApi: AffiliatesApi,
    /**
     * The MiningApi service constructor.
     * @property {module:api/MiningApi}
     */
    MiningApi: MiningApi,
    /**
     * The PaymentsApi service constructor.
     * @property {module:api/PaymentsApi}
     */
    PaymentsApi: PaymentsApi,
    /**
     * The ProfileApi service constructor.
     * @property {module:api/ProfileApi}
     */
    ProfileApi: ProfileApi,
    /**
     * The PublicApi service constructor.
     * @property {module:api/PublicApi}
     */
    PublicApi: PublicApi,
    /**
     * The WalletApi service constructor.
     * @property {module:api/WalletApi}
     */
    WalletApi: WalletApi
  };

  return exports;
}));
